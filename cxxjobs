SHELL := /bin/sh

empty :=
space := $(empty) $(empty)
filter_vals := : ..
STRIP_CYGDRIVE = $(subst /cygdrive/,$(empty),$1)
SPLIT_CYGPATH = $(subst /,$(space),$(STRIP_CYGDRIVE))
REPLACE_DRIVE = $(patsubst $(firstword $(SPLIT_CYGPATH)),$(addsuffix :,$(firstword $(SPLIT_CYGPATH))),$(SPLIT_CYGPATH))
RECONSTRUCT_PATH = $(subst $(space),/,$(REPLACE_DRIVE))
WIN_PATH = $(if $(filter-out $(filter_vals),$1),$(RECONSTRUCT_PATH),$1)

ABSOBJDIR = $(call WIN_PATH,$(abspath $(OBJDIR)))
ABSOUTDIR = $(call WIN_PATH,$(abspath $(OUTDIR)))

ABSCXXSRCS = $(foreach src,$(abspath $(CXXSRCS)),$(call WIN_PATH,$(src)))

define make_cpp_to_o
$2: $1 $3
	@echo -n Compiling $(notdir $1) ...
	@echo Build command line: $$(CXX) $$(CXXFLAGS) $$(CPPFLAGS) $$(DEPFLAGS_NOTMP) $$(INCLIST) $1 -o $2 > $$(TMPDIR)/$$(notdir $1).log
	@echo >> $$(TMPDIR)/$$(notdir $1).log
	@echo >> $$(TMPDIR)/$$(notdir $1).log
	@bash -c 'if ! $$(CXX) $$(CXXFLAGS) $$(CPPFLAGS) $$(DEPFLAGS) $$(INCLIST) $1 -o $2 &>> $$(TMPDIR)/$$(notdir $1).log; then \
		mv $$(TMPDIR)/$$(notdir $1).log $$(TMPDIR)/$$(notdir $1).error; \
		echo -e " [\033[1;31mERROR\033[0m]"; \
		echo ""; \
		echo -e "\033[1;31m__________________________ $$(notdir $1) __________________________\033[0m"; \
		echo "" >> $$(TMPDIR)/$$(notdir $1).error; \
		if [ -f $$(TMPDIR)/$$(basename $$(notdir $1)).err ]; then \
			cat $$(TMPDIR)/$$(basename $$(notdir $1)).err >> $$(TMPDIR)/$$(notdir $1).error; \
		fi; \
		rm -f $$(TMPDIR)/$$(basename $$(notdir $1)).err; \
		cat $$(TMPDIR)/$$(notdir $1).error; \
		echo ""; \
		exit 2; \
	elif grep -q "warning" $$(TMPDIR)/$$(notdir $1).log; then \
		mv $$(TMPDIR)/$$(notdir $1).log $$(TMPDIR)/$$(notdir $1).warn; \
		echo -e " [\033[1;33mWARNING\033[0m]"; \
	else \
		echo -e " [\033[1;32mFINISHED\033[0m]"; \		
	fi; \
	exit' || (exit 2)
	@$$(POSTCOMPILE)

$3: 

endef

CXXOBJ := $(foreach src,$(ABSCXXSRCS),$(subst $(dir $(src)),$(addsuffix /,$(ABSOBJDIR)),$(src:.cpp=.o)))
CXXDEP := $(foreach src,$(ABSCXXSRCS),$(subst $(dir $(src)),$(addsuffix /,$(ABSOBJDIR)),$(src:.cpp=.d)))
DEPFLAGS = -MT $@ -MD -MP -MF $*.td
DEPFLAGS_NOTMP = -MT $@ -MD -MP -MF $*.d
POSTCOMPILE = mv -f $*.td $*.d

$(foreach src,$(ABSCXXSRCS),$(eval $(call make_cpp_to_o,$(src),$(subst $(dir $(src)),$(addsuffix /,$(ABSOBJDIR)),$(src:.cpp=.o)),$(subst $(dir $(src)),$(addsuffix /,$(ABSOBJDIR)),$(src:.cpp=.d)))))

.PRECIOUS: $(CXXDEP)

cxx_src_to_obj: $(CXXOBJ)

-include $(CXXDEP)	